import asyncio
import random
import time
from playwright.async_api import async_playwright

TOTAL_USERS = 5
EXIT_USERS = 2

USER_CREDENTIALS = [
    {"phone": "+79201010612", "first_name": "–ê–Ω–Ω–∞", "last_name": "–ò–≤–∞–Ω–æ–≤–∞", "email": "anna.ivanova@gmail.com"},
    {"phone": "+79201010002", "first_name": "–ú–∞—Ä–∏—è", "last_name": "–ü–µ—Ç—Ä–æ–≤–∞", "email": "maria.petrova@yandex.ru"},
    {"phone": "+79201010003", "first_name": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞", "last_name": "–°–∏–¥–æ—Ä–æ–≤–∞", "email": "ekaterina.sidorova@mail.ru"},
    {"phone": "+79201010004", "first_name": "–û–ª—å–≥–∞", "last_name": "–ö—É–∑–Ω–µ—Ü–æ–≤–∞", "email": "olga.kuznetsova@rambler.ru"},
    {"phone": "+79201010015", "first_name": "–¢–∞—Ç—å—è–Ω–∞", "last_name": "–ü–æ–ø–æ–≤–∞", "email": "tatiana.popova@outlook.com"},]
    #{"phone": "+79201010006", "first_name": "–ù–∞—Ç–∞–ª—å—è", "last_name": "–°–º–∏—Ä–Ω–æ–≤–∞", "email": "natalia.smirnova@gmail.com"},
    #{"phone": "+79201010007", "first_name": "–ï–ª–µ–Ω–∞", "last_name": "–í–∞—Å–∏–ª—å–µ–≤–∞", "email": "elena.vasileva@yandex.ru"},
    #{"phone": "+79201010008", "first_name": "–°–≤–µ—Ç–ª–∞–Ω–∞", "last_name": "–§–µ–¥–æ—Ä–æ–≤–∞", "email": "svetlana.fedorova@mail.ru"},
    #{"phone": "+79201010009", "first_name": "–ê–ª–∏–Ω–∞", "last_name": "–ú–æ—Ä–æ–∑–æ–≤–∞", "email": "alina.morozova@rambler.ru"},
    #{"phone": "+79201010010", "first_name": "–î–∞—Ä—å—è", "last_name": "–ù–æ–≤–∏–∫–æ–≤–∞", "email": "daria.novikova@outlook.com"},
    #{"phone": "+79201010011", "first_name": "–í–µ—Ä–æ–Ω–∏–∫–∞", "last_name": "–ó–∞–π—Ü–µ–≤–∞", "email": "veronika.zaytseva@gmail.com"},
    #{"phone": "+79201010012", "first_name": "–ê–Ω–∞—Å—Ç–∞—Å–∏—è", "last_name": "–°–æ–ª–æ–≤—å–µ–≤–∞", "email": "anastasia.solovieva@yandex.ru"},
    #{"phone": "+79201010013", "first_name": "–í–∏–∫—Ç–æ—Ä–∏—è", "last_name": "–ú–∏—Ö–∞–π–ª–æ–≤–∞", "email": "victoria.mikhailova@mail.ru"},
    #{"phone": "+79201010014", "first_name": "–ö—Ä–∏—Å—Ç–∏–Ω–∞", "last_name": "–ë–µ–ª—è–µ–≤–∞", "email": "kristina.belyaeva@rambler.ru"},
    #{"phone": "+79201010015", "first_name": "–ü–æ–ª–∏–Ω–∞", "last_name": "–¢–∏—Ö–æ–Ω–æ–≤–∞", "email": "polina.tikhonova@outlook.com"},
#]


async def user_actions(context, user, user_index):
    page = await context.new_page()
    await page.goto("https://dev.parkuley.ru")
    await page.wait_for_load_state("networkidle")

    print(f"üë§ [User {user_index}] –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è {user['phone']}")

    await page.get_by_role("button", name="–í–æ–π—Ç–∏").click()
    await page.locator("input[name='phone']").fill(user["phone"])
    await page.get_by_role("button", name="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å").click()
    await page.get_by_placeholder("‚Äì‚Äì‚Äì‚Äì").fill("2211")
    await page.locator("input[name=\"name\"]").click()
    await page.locator("input[name=\"name\"]").fill(user["first_name"])
    await page.locator("input[name=\"surname\"]").click()
    await page.locator("input[name=\"surname\"]").fill(user["last_name"])
    await page.locator("input[name=\"email\"]").click()
    await page.get_by_role("button", name="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è").click()

    await page.wait_for_timeout(2000)

    print(f" [User {user_index}] –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª—Å—è!")

    start_time = time.time()
    try:
        while time.time() - start_time < 300:
            await page.wait_for_timeout(random.randint(1000, 3000))  # –°–ª—É—á–∞–π–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –º–µ–∂–¥—É –¥–µ–π—Å—Ç–≤–∏—è–º–∏

            action = random.choice(["–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–∞—Ä–∫–æ–≤–æ–∫", "–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä–∫–æ–≤–∫–∏", "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"])
            if action == "–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–∞—Ä–∫–æ–≤–æ–∫":
                await page.get_by_role("link", name="–ò–≤–∞–Ω–æ–≤–æ, –õ–µ–∂–Ω–µ–≤—Å–∫–∞—è —É–ª–∏—Ü–∞, 128 –¢–ï–°–¢ –ñ–ö, 12 –º").click()
            elif action == "–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä–∫–æ–≤–∫–∏":
                await page.get_by_role("button", name="–°–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É —Å–≤–æ—é –ø–∞—Ä–∫–æ–≤–∫—É").click()
                time.sleep(4)
                await page.get_by_role("button", name="–û—Ç–º–µ–Ω–∞").click()
            elif action == "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ":
                await page.get_by_role("link", name="–ò–≤–∞–Ω–æ–≤–æ, —É–ª–∏—Ü–∞ –ü—Ä–æ—Ä–æ–∫–æ–≤–∞, 8 3").click()
                await page.get_by_role("button", name="–ù–∞–∑–∞–¥").click()


            print(f" [User {user_index}] –°–æ–≤–µ—Ä—à–∏–ª –¥–µ–π—Å—Ç–≤–∏–µ: {action}")


            if user_index < EXIT_USERS and time.time() - start_time > 180:
                print(f" [User {user_index}] –í—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã!")
                await page.get_by_role("button", name="–í—ã–π—Ç–∏").click()
                break
    except Exception as e:
        print(f" –û—à–∏–±–∫–∞ —É {user['phone']}: {e}")
        await page.screenshot(path=f"error_{user_index}.png")
    finally:
        await context.close()


async def run_all_users():
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=False)
        tasks = []


        for i, user in enumerate(USER_CREDENTIALS):
            context = await browser.new_context()
            task = asyncio.create_task(user_actions(context, user, i))
            tasks.append(task)

        await asyncio.gather(*tasks)

        await browser.close()


asyncio.run(run_all_users())
